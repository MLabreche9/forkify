var _modelJs = require('./model.js');
var _configJs = require('./config.js');
var _viewsRecipeViewJs = require('./views/recipeView.js');
var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
var _viewsRecipeViewJsDefault = _parcelHelpers.interopDefault(_viewsRecipeViewJs);
var _viewsSearchViewJs = require('./views/searchView.js');
var _viewsSearchViewJsDefault = _parcelHelpers.interopDefault(_viewsSearchViewJs);
var _viewsResultsViewJs = require('./views/resultsView.js');
var _viewsResultsViewJsDefault = _parcelHelpers.interopDefault(_viewsResultsViewJs);
var _viewsPaginationViewJs = require('./views/paginationView.js');
var _viewsPaginationViewJsDefault = _parcelHelpers.interopDefault(_viewsPaginationViewJs);
var _viewsBookmarksViewJs = require('./views/bookmarksView.js');
var _viewsBookmarksViewJsDefault = _parcelHelpers.interopDefault(_viewsBookmarksViewJs);
var _viewsAddRecipeViewJs = require('./views/addRecipeView.js');
var _viewsAddRecipeViewJsDefault = _parcelHelpers.interopDefault(_viewsAddRecipeViewJs);
require('core-js/stable');
require('regenerator-runtime/runtime');
require('regenerator-runtime');
// if (module.hot) {
// module.hot.accept();
// }
// /////////////////////////////////////
const controlRecipes = async function () {
  try {
    const id = window.location.hash.slice(1);
    if (!id) return;
    _viewsRecipeViewJsDefault.default.renderSpinner();
    // Update results view to mark selected search result
    _viewsResultsViewJsDefault.default.update(_modelJs.getSearchResultsPage());
    // Update bookmarks view
    _viewsBookmarksViewJsDefault.default.update(_modelJs.state.bookmarks);
    // 1) loading recipe
    await _modelJs.loadRecipe(id);
    // 2) Rendering recipe
    _viewsRecipeViewJsDefault.default.render(_modelJs.state.recipe);
  } catch (err) {
    _viewsRecipeViewJsDefault.default.renderError();
    console.error(err);
  }
};
const controlSearchResults = async function () {
  try {
    _viewsResultsViewJsDefault.default.renderSpinner();
    // Get Search query
    const query = _viewsSearchViewJsDefault.default.getQuery();
    if (!query) return;
    // Load search results
    await _modelJs.loadSearchResults(query);
    // Render results
    _viewsResultsViewJsDefault.default.render(_modelJs.getSearchResultsPage());
    // Render initial pagination buttons
    _viewsPaginationViewJsDefault.default.render(_modelJs.state.search);
  } catch (err) {
    console.log(err);
  }
};
const controlPagination = function (goToPage) {
  // Render New results
  _viewsResultsViewJsDefault.default.render(_modelJs.getSearchResultsPage(goToPage));
  // Render NEW pagination buttons
  _viewsPaginationViewJsDefault.default.render(_modelJs.state.search);
};
const controlServings = function (newServings) {
  // Update the recipe servings (in state)
  _modelJs.updateServings(newServings);
  // Update the recipe view
  // recipeView.render(model.state.recipe);
  _viewsRecipeViewJsDefault.default.update(_modelJs.state.recipe);
};
const controlAddBookmark = function () {
  // Add/remove bookmark
  if (!_modelJs.state.recipe.bookmarked) _modelJs.addBookmark(_modelJs.state.recipe); else _modelJs.deleteBookmark(_modelJs.state.recipe.id);
  // Update recipe view
  _viewsRecipeViewJsDefault.default.update(_modelJs.state.recipe);
  // Render bookmarks
  _viewsBookmarksViewJsDefault.default.render(_modelJs.state.bookmarks);
};
const controlBookmarks = function () {
  _viewsBookmarksViewJsDefault.default.render(_modelJs.state.bookmarks);
};
const controlAddRecipe = async function (newRecipe) {
  try {
    // Show loading spinner
    _viewsAddRecipeViewJsDefault.default.renderSpinner();
    // Upload the new recipe data
    await _modelJs.uploadRecipe(newRecipe);
    console.log(_modelJs.state.recipe);
    // Render recipe
    _viewsRecipeViewJsDefault.default.render(_modelJs.state.recipe);
    // Success Message
    _viewsAddRecipeViewJsDefault.default.renderMessage();
    // Render bookmark view
    _viewsBookmarksViewJsDefault.default.render(_modelJs.state.bookmarks);
    // Change ID in URL
    window.history.pushState(null, '', `#${_modelJs.state.recipe.id}`);
    // Close form window
    setTimeout(function () {
      _viewsAddRecipeViewJsDefault.default.toggleWindow();
    }, _configJs.MODAL_CLOSE_SEC * 1000);
  } catch (err) {
    console.error(err);
    _viewsAddRecipeViewJsDefault.default.renderError(err.message);
  }
};
const init = function () {
  _viewsBookmarksViewJsDefault.default.addHandlerRender(controlBookmarks);
  _viewsRecipeViewJsDefault.default.addHandlerRender(controlRecipes);
  _viewsRecipeViewJsDefault.default.addHandlerUpdateServings(controlServings);
  _viewsRecipeViewJsDefault.default.addHandlerAddBookmark(controlAddBookmark);
  _viewsSearchViewJsDefault.default.addHandlerSearch(controlSearchResults);
  _viewsPaginationViewJsDefault.default.addHandlerClick(controlPagination);
  _viewsAddRecipeViewJsDefault.default.addHandlerUpload(controlAddRecipe);
};
init();
