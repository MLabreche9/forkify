var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _ViewJs = require('./View.js');
var _ViewJsDefault = _parcelHelpers.interopDefault(_ViewJs);
require('url:../../img/icons.svg');
function _defineProperty(obj, key, value) {
  if ((key in obj)) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
class PreviewView extends _ViewJsDefault.default {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "_parentElement", '');
  }
  _generateMarkup() {
    const id = window.location.hash.slice(1);
    return `
      <li class="preview">
      <a class="preview__link ${this._data.id === id ? 'preview__link--active' : ''}" preview__link" href="#${_.id}">
        <figure class="preview__fig">
          <img src="${_.image}" alt="${_.title}" />
        </figure>
        <div class="preview__data">
          <h4 class="preview__title">${_.title}</h4>
          <p class="preview__publisher">${_.publisher}</p>
        </div>
      </a>
    </li>
      `;
  }
}
exports.default = new PreviewView();
